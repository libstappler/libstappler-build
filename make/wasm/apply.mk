# Copyright (c) 2024 Stappler LLC <admin@stappler.dev>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

TOOLKIT_WITS_SRCS := $(call sp_toolkit_wit_list,$(TOOLKIT_SRCS_DIRS), $(TOOLKIT_SRCS_OBJS))

BUILD_WITS_SRCS := $(call sp_local_wit_list,$(LOCAL_SRCS_DIRS), $(LOCAL_SRCS_OBJS))

BUILD_WITS_OBJS := $(addprefix $(BUILD_WIT_OUTDIR)/wit/,$(notdir $(TOOLKIT_WITS_SRCS) $(BUILD_WITS_SRCS)))

BUILD_WITS := $(BUILD_WITS_OBJS) $(BUILD_WIT_OUTDIR)/wit/package.wit

BUILD_WASM_SRCS := $(call sp_wasm_srcs_list,$(LOCAL_WASM_DIRS), $(LOCAL_WASM_OBJS), $(LOCAL_ROOT)) \
	$(call sp_wasm_srcs_list,$(TOOLKIT_WASM_DIRS), $(TOOLKIT_WASM_OBJS), $(GLOBAL_ROOT))

BUILD_WASM_OBJS := $(call sp_wasm_object_list,$(BUILD_WASM_OUTDIR), $(BUILD_WASM_SRCS))

BUILD_WASM_INCLUDES := $(call sp_wasm_include_list, $(LOCAL_WASM_INCLUDES_DIRS), $(LOCAL_WASM_INCLUDES_OBJS), $(LOCAL_ROOT)) \
	$(call sp_wasm_include_list, $(TOOLKIT_WASM_INCLUDES_DIRS), $(TOOLKIT_WASM_INCLUDES_OBJS), $(GLOBAL_ROOT)) \
	$(BUILD_WIT_OUTDIR)/c

BUILD_WASM_CFLAGS := $(BUILD_WASM_CFLAGS_INIT) $(GLOBAL_WASM_CFLAGS) $(LOCAL_WASM_CFLAGS) $(TOOLKIT_WASM_CFLAGS) $(addprefix -I,$(BUILD_WASM_INCLUDES))
BUILD_WASM_CXXFLAGS := $(BUILD_WASM_CXXFLAGS_INIT) $(GLOBAL_WASM_CXXFLAGS) $(LOCAL_WASM_CXXFLAGS) $(TOOLKIT_WASM_CXXFLAGS) $(addprefix -I,$(BUILD_WASM_INCLUDES))

define BUILD_WITS_copy_rule
$(BUILD_WIT_OUTDIR)/wit/$(notdir $(1)) : $(1)
	$$(call sp_copy_wit,$(1))
endef

$(BUILD_WIT_OUTDIR)/wit/package.wit : $(BUILD_WITS_OBJS)
	@printf '// Autogenerated by makefile (wasm/apply.mk)\n' > $@
	@printf 'package stappler:wasm;\n\n' >> $@
	@printf "world stappler {\n" >> $@
	@grep -Gr '^[^@]*@import[^a-z]*interface[^a-z]*[a-z\-]*'  --only-matching $(BUILD_WIT_OUTDIR)/wit  --no-filename \
		| sed 's/^[^@]*@import[^a-z]*interface[^a-z]*\([a-z]*\)$$/	import \1;/g' >> $@
	@grep -Gr '^[^@]*@export[^a-z]*interface[^a-z]*[a-z\-]*'  --only-matching $(BUILD_WIT_OUTDIR)/wit  --no-filename \
		| sed 's/^[^@]*@export[^a-z]*interface[^a-z]*\([a-z]*\)$$/	export \1;/g' >> $@
	@printf "	export initialize: func();\n" >> $@
	@printf "	export finalize: func();\n" >> $@
	@printf '}\n' >> $@

$(BUILD_WIT_OUTDIR)/c/stappler.c : $(BUILD_WITS)
	$(GLOBAL_QUIET_WIT_BINDGEN) $(WIT_BINDGEN) c $(BUILD_WIT_OUTDIR)/wit --out-dir $(BUILD_WIT_OUTDIR)/c

$(foreach WIT,$(TOOLKIT_WITS_SRCS) $(BUILD_WITS_SRCS),$(eval $(call BUILD_WITS_copy_rule,$(WIT))))

-include $(patsubst %.o,%.o.d,$(BUILD_WASM_OBJS))

define TOOLKIT_wasm_c_rule
$(addprefix $(2),$(patsubst %.c,%.o,$(realpath $(1)))): \
		$(1) $$(LOCAL_MAKEFILE) $$(TOOLKIT_MODULES) $$(BUILD_WIT_OUTDIR)/c/stappler.c
	$$(call sp_compile_wasm_c,$(3))
endef

define TOOLKIT_wasm_cpp_rule
$(addprefix $(2),$(patsubst %.cpp,%.o,$(realpath $(1)))): \
		$(1) $$(LOCAL_MAKEFILE) $$(TOOLKIT_MODULES) $$(BUILD_WIT_OUTDIR)/c/stappler.c
	$$(call sp_compile_wasm_cpp,$(3))
endef

$(foreach target,\
	$(sort $(filter %.c,$(BUILD_WASM_SRCS))),\
	$(eval $(call TOOLKIT_wasm_c_rule,$(target),$(BUILD_WASM_OUTDIR),$(BUILD_WASM_CFLAGS))))

$(foreach target,\
	$(sort $(filter %.cpp,$(BUILD_WASM_SRCS))),\
	$(eval $(call TOOLKIT_wasm_cpp_rule,$(target),$(BUILD_WASM_OUTDIR),$(BUILD_WASM_CXXFLAGS))))

ifeq ($(filter %.cpp,$(BUILD_WASM_SRCS)),)
WASI_LINK_TOOL := $(WASI_SDK_CC)
else
WASI_LINK_TOOL := $(WASI_SDK_CXX)
endif

$(BUILD_WIT_OUTDIR)/c/stappler.o : $(BUILD_WIT_OUTDIR)/c/stappler.c
	$(call sp_compile_wasm_c,$(BUILD_WASM_CFLAGS))

ifdef LOCAL_WASM_MODULE
$(BUILD_WASM_MODULE): $(BUILD_WASM_OBJS) $(BUILD_WIT_OUTDIR)/c/stappler.o
	$(GLOBAL_QUIET_WASM_LINK) $(WASI_LINK_TOOL) $(BUILD_WASM_CFLAGS_DEFAULT) $(BUILD_WIT_OUTDIR)/c/stappler.o  $(BUILD_WIT_OUTDIR)/c/stappler_component_type.o \
		$(BUILD_WASM_OBJS) $(BUILD_WASM_LDFLAGS) -o $(BUILD_WASM_MODULE)
endif
