# Copyright (c) 2025 Stappler LLC <admin@stappler.dev>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

BUILD_EXEC_OBJS :=
BUILD_EXEC_CONFIG :=

define BUILD_add_target_exec
BUILD_EXEC_OBJS += $(1)
endef

ifndef SHARED_PREFIX
BUILD_EXEC_CONFIG := $(BUILD_С_OUTDIR)/exec_objs/include/stappler-buildconfig.h
$(eval $(call BUILD_config_header,$(BUILD_EXEC_CONFIG),buildconfig,$(BUILD_CONFIG_FLAGS) BUILD_EXECUTABLE,$(BUILD_CONFIG_VALUES),$(BUILD_CONFIG_STRINGS)))
endif

# Генерируем конфигурацию приложения, доступную для чтения фреймворком
ifeq ($(filter stappler_core,$(GLOBAL_MODULES)),stappler_core)
BUILD_APP_CONFIG := $(BUILD_С_OUTDIR)/exec_objs/include/stappler-appconfig.h
BUILD_APP_CONFIG_SOURCE := $(BUILD_С_OUTDIR)/exec_objs/objs/stappler-appconfig.cpp

BUILD_APP_CONFIG_VALUES := \
	APPCONFIG_VERSION_VARIANT=$(APPCONFIG_VERSION_VARIANT) \
	APPCONFIG_VERSION_API=$(APPCONFIG_VERSION_API) \
	APPCONFIG_VERSION_REV=$(APPCONFIG_VERSION_REV) \
	APPCONFIG_VERSION_BUILD=$(APPCONFIG_VERSION_BUILD) \
	APPCONFIG_EXEC_LIVE_RELOAD=$(APPCONFIG_EXEC_LIVE_RELOAD) \
	$(LOCAL_APPCONFIG_VALUES)

BUILD_APP_CONFIG_STRINGS := \
	APPCONFIG_APP_NAME=$$(APPCONFIG_APP_NAME) \
	APPCONFIG_BUNDLE_NAME=$$(APPCONFIG_BUNDLE_NAME) \
	APPCONFIG_BUNDLE_PATH=$$(APPCONFIG_BUNDLE_PATH) \
	$(LOCAL_APPCONFIG_STRINGS)

ifeq ($(LOCAL_EXEC_LIVE_RELOAD),1)
BUILD_APP_CONFIG_STRINGS += \
	APPCONFIG_EXEC_LIVE_RELOAD_LIBRARY=$$(BUILD_SHARED_LIBRARY)
endif

$(eval $(call BUILD_config_header,$(BUILD_APP_CONFIG),appconfig,$(BUILD_APP_CONFIG_FLAGS),$(BUILD_APP_CONFIG_VALUES),$(BUILD_APP_CONFIG_STRINGS)))

# $(1) - target path
# $(2) - value name
# $(3) - value
define BUILD_write_appconfig_value
@echo '$(tab)SharedSymbol("$(2)", &$(2)),' >> $(1)$(newline)$(tab)
endef

# $(1) - target path
# $(2) - string name
# $(3) - string value
define BUILD_write_appconfig_string
@echo '$(tab)SharedSymbol("$(2)", $(2)),' >> $(1)$(newline)$(tab)
endef

define BUILD_appconfig_source
$(1): $$(LOCAL_MAKEFILE) $$(TOOLKIT_MODULES) $$(TOOLKIT_CACHED_FLAGS) $(BUILD_APP_CONFIG)
	@$(GLOBAL_MKDIR) $(dir $(1))
	@echo "// Autogenerated appconfig source" > $(1)
	@echo "" >> $(1)
	@echo '#include "stappler-appconfig.h"' >> $(1)
	@echo '#include "SPSharedModule.h"' >> $(1)
	@echo "" >> $(1)
	@echo "namespace stappler::appconfig {" >> $(1)
	@echo "static SharedSymbol s_appconfigSharedSymbols[] = {" >> $(1)
	$(foreach var,$(3),$(call BUILD_write_appconfig_value,$(1),$(firstword $(subst =, ,$(var))),$(lastword $(subst =, ,$(var)))))
	$(foreach var,$(4),$(call BUILD_write_appconfig_string,$(1),$(firstword $(subst =, ,$(var))),$(lastword $(subst =, ,$(var)))))
	@echo "};" >> $(1)
	@echo "" >> $(1)
	@echo 'static SharedModule s_bitmapSharedModule("appconfig", s_appconfigSharedSymbols, sizeof(s_appconfigSharedSymbols) / sizeof(SharedSymbol));' >> $(1)
	@echo "" >> $(1)
	@echo "}" >> $(1)
	@echo "" >> $(1)
endef

$(eval $(call BUILD_appconfig_source,$(BUILD_APP_CONFIG_SOURCE),$(BUILD_APP_CONFIG_FLAGS),$(BUILD_APP_CONFIG_VALUES),$(BUILD_APP_CONFIG_STRINGS)))

endif

sp_build_c_exec_rule_counted = \
	$(eval \
		$(call BUILD_c_rule,$(1),$(2),$(TOOLKIT_EXEC_GCH),$(BUILD_EXEC_CFLAGS))\
		$(call BUILD_EXEC_template,$(2),$(LOCAL_EXECUTABLE),$(BUILD_EXEC_WORDS))\
	)\
	$(eval $(call BUILD_add_target_exec,$(2)))

sp_build_cpp_exec_rule_counted = \
	$(eval \
		$(call BUILD_cpp_rule,$(1),$(2),$(TOOLKIT_EXEC_GCH),$(BUILD_EXEC_CXXFLAGS))\
		$(call BUILD_EXEC_template,$(2),$(LOCAL_EXECUTABLE),$(BUILD_EXEC_WORDS))\
	)\
	$(eval $(call BUILD_add_target_exec,$(2)))

sp_build_mm_exec_rule_counted = \
	$(eval \
		$(call BUILD_mm_rule,$(1),$(2),$(TOOLKIT_EXEC_GCH),$(BUILD_EXEC_CXXFLAGS))\
		$(call BUILD_EXEC_template,$(2),$(LOCAL_EXECUTABLE),$(BUILD_EXEC_WORDS))\
	)\
	$(eval $(call BUILD_add_target_exec,$(2)))

$(foreach target,$(TOOLKIT_EXEC_GCH),\
	$(eval $(call BUILD_gch_rule,$(target),$(BUILD_EXEC_CXXFLAGS),$(BUILD_EXEC_CONFIG) $(BUILD_APP_CONFIG_SOURCE)))\
	$(eval $(call BUILD_EXEC_template,$(target),$(LOCAL_EXECUTABLE),$(BUILD_EXEC_WORDS))))

$(foreach target,\
	$(sort $(filter %.c,$(BUILD_EXEC_SRCS))),\
	$(call sp_build_c_exec_rule_counted,$(target),$(call sp_build_target_path,$(target),$(BUILD_С_OUTDIR)/exec_objs)))

$(foreach target,\
	$(sort $(filter %.cpp,$(BUILD_EXEC_SRCS))),\
	$(call sp_build_cpp_exec_rule_counted,$(target),$(call sp_build_target_path,$(target),$(BUILD_С_OUTDIR)/exec_objs)))

$(foreach target,\
	$(sort $(filter %.mm,$(BUILD_EXEC_SRCS))),\
	$(call sp_build_mm_exec_rule_counted,$(target),$(call sp_build_target_path,$(target),$(BUILD_С_OUTDIR)/exec_objs)))

$(call sp_build_cpp_exec_rule_counted,$(BUILD_APP_CONFIG_SOURCE),$(call sp_build_target_path,$(BUILD_APP_CONFIG_SOURCE),$(BUILD_С_OUTDIR)/exec_objs))

BUILD_CDB_TARGET_SRCS += $(BUILD_EXEC_SRCS)
BUILD_CDB_TARGET_OBJS += $(BUILD_EXEC_OBJS)
